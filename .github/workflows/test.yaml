name: test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
      checks: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle

      - name: Install protoc
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler

      - name: Verify protoc installation
        run: protoc --version

      - name: Configure Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Run unit tests
        run: ./gradlew --no-daemon test

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            build/test-results/test/
            build/reports/tests/test/

      - name: Publish test results
        if: always() && github.event_name != 'pull_request'
        uses: dorny/test-reporter@v1
        with:
          name: Unit Test Results
          path: 'build/test-results/test/TEST-*.xml'
          reporter: java-junit
          fail-on-error: false

      - name: Test Report for PR
        if: always() && github.event_name == 'pull_request'
        uses: mikepenz/action-junit-report@v4
        with:
          report_paths: 'build/test-results/test/TEST-*.xml'
          check_name: 'Unit Test Results'
          fail_on_failure: false

  code-coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle

      - name: Install protoc
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler

      - name: Configure Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Run tests with coverage
        run: ./gradlew --no-daemon test jacocoTestReport

      - name: Upload coverage reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: |
            build/reports/jacoco/test/

  multi-os-tests:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle

      - name: Install protoc (Ubuntu/macOS)
        if: runner.os != 'Windows'
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get update
            sudo apt-get install -y protobuf-compiler
          elif [ "$RUNNER_OS" == "macOS" ]; then
            brew install protobuf
          fi

      - name: Install protoc (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install protoc

      - name: Configure Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Run tests
        run: ./gradlew --no-daemon test

  java-compatibility:
    strategy:
      matrix:
        java-version: ['17', '21']
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java ${{ matrix.java-version }}
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ matrix.java-version }}
          cache: gradle

      - name: Install protoc
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler

      - name: Configure Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Run tests with Java ${{ matrix.java-version }}
        run: ./gradlew --no-daemon test

  integration-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle

      - name: Install protoc
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler

      - name: Configure Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Run integration tests
        env:
          ENABLE_INTEGRATION_TESTS: true
        run: ./gradlew --no-daemon integrationTest

      - name: Upload integration test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-results
          path: |
            build/test-results/integrationTest/
            build/reports/tests/integrationTest/

  s3-topic-mapping-integration:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle

      - name: Install protoc
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler

      - name: Configure Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build JAR
        run: ./gradlew --no-daemon shadowJar

      - name: Test S3 topic mapping integration
        run: |
          cd docker-compose
          timeout 300 ./test-s3-topic-mapping-integration.sh

      - name: Upload S3 integration test logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: s3-topic-mapping-integration-logs
          path: |
            docker-compose/logs/
            docker-compose/test-results/

  quality-checks:
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle

      - name: Install protoc
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler

      - name: Configure Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Run all tests with coverage
        env:
          ENABLE_INTEGRATION_TESTS: true
        run: ./gradlew --no-daemon clean build jacocoTestReport

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: |
            build/reports/jacoco/test/
            build/reports/jacoco/integrationTest/

      - name: Upload final JAR
        uses: actions/upload-artifact@v4
        with:
          name: kafbat-ui-serde-protobuf-descriptor
          path: build/libs/*.jar